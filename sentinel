#!/bin/bash
source ./src/core.bash
load_component "args" "helper" "sentinel"
parse_args "$@"

# Show help?
test -n "$HELP" && source ./src/help.bash && exit 1

# Status commands
test -n "$ARG_STATUS" && load_component "status" && display_task_status "$ARG_STATUS" && exit 0
test -n "$ARG_STATUS_ALL" && load_component "status" && display_system_status && exit 0

test -n "$ARG_ADD" && $EDITOR $TASKS_DIR/$ARG_ADD && exit 0
test -n "$ARG_EDIT" && $EDITOR $TASKS_DIR/$ARG_EDIT && exit 0
test -n "$ARG_DELETE" && test -f $TASKS_DIR/$ARG_DELETE && $(which rm) $_ && exit 0

test -n "$TASK_EXAMPLE" && cat task.example && exit 0

[[ $EUID -ne 0 ]] && echo 'This script must be run as root. For help: '$0' --help' && exit 255

# Command singals to control daemonized Sentinel
test -n "$ARG_RELOAD" && kill -USR1 $(cat $PID_FILE) && echo 'Reload signal sent' && exit 0
test -n "$ARG_STOP" && kill -TERM $(cat $PID_FILE) && echo 'Quit signal sent' && exit 0
test -n "$ARG_RESTART" && kill -HUP $(cat $PID_FILE) && echo 'Restart signal sent' && exit 0

# Check if such process already is running
if [[ -e $PID_FILE && -e /proc/$(cat $PID_FILE) ]]; then
  echo "Sentinel is already running with pid $(cat $PID_FILE)"
  exit 0
fi

# Start the daemon?
if [[ -n "$ARG_START" ]]; then
  ( ARG_START='' $0 > $LOG_FILE & ) & pid=$!
  cat <<EOF
Sentinel started in daemon mode with pid: $pid
Log file: $LOG_FILE
EOF
  exit 1
fi

# Prepare folders
test ! -d $WORK_DIR && mkdir $_
test ! -d $TASKS_DIR && mkdir $_

println 'Tasks dir: '$TASKS_DIR
println 'Work dir: '$WORK_DIR

# Log pid of process
echo $$ > $PID_FILE

# Start monitor loop
test -f $RELOAD_FILE && rm -f $_

trap "println 'Reloading task configs signal' && load_config" SIGUSR1
trap "println 'Exiting due to quit signal' && echo 0 > $PID_FILE && exit 0" SIGTERM SIGINT SIGKILL
trap "println 'Exiting due to restart signal' && { ( $0 > $LOG_FILE & ) & } &&  exit 0" SIGHUP

load_config
while true; do
  spawn_checkers
  save_status
  println '...waiting '$CHECK_TIMEOUT' sec'
  sleep $CHECK_TIMEOUT
done
